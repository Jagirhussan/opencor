PROJECT(ZincPlugin)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" ""
      RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/${REMOTE_EXTERNAL_BINARIES_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.3.1.1.dll 714e43e303f729370beedf8cd50a6726e3ba81a4)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.3.1.1.lib 4f3aaf733766aef26fefcbb6f3bfc7116cf40d51)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zincd.3.1.1d.dll 48e8d05fcf39d2448156ea799fac4762aec3cadb)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zincd.3.1.1d.lib 8b7782e307e6b330cbc1973e78faf6f541a917cd)
    ENDIF()
ELSEIF(APPLE)
   RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libzinc.3.dylib 80f95cfa1ef7d1d9af0457634ba26e3c72d6152e)
ELSE()
   RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libzinc.so.3 28539f4f866aafee0a3a01cfadcd13d7c89887a3)
ENDIF()

# Retrieve the Zinc external binary

SET(EXTERNAL_BINARIES_DIR ${PROJECT_SOURCE_DIR}/${LOCAL_EXTERNAL_BINARIES_DIR})

IF(WIN32)
    IF(RELEASE_MODE)
        SET(EXTERNAL_BINARIES
            zinc.3.1.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        )
    ELSE()
        SET(EXTERNAL_BINARIES
            zincd.3.1.1d${CMAKE_SHARED_LIBRARY_SUFFIX}
        )
    ENDIF()
ELSEIF(APPLE)
   SET(EXTERNAL_BINARIES
       libzinc.3${CMAKE_SHARED_LIBRARY_SUFFIX}
   )
ELSE()
    SET(EXTERNAL_BINARIES
        libzinc${CMAKE_SHARED_LIBRARY_SUFFIX}.3
    )
ENDIF()

# Add the plugin

ADD_PLUGIN(Zinc
    SOURCES
        ../../plugininfo.cpp

        src/zincplugin.cpp
    HEADERS_MOC
        src/zincplugin.h
    INCLUDE_DIRS
        include
        src
    QT_MODULES
        Core
    EXTERNAL_BINARIES_DIR
        ${EXTERNAL_BINARIES_DIR}
    EXTERNAL_BINARIES
        ${EXTERNAL_BINARIES}
    TESTS
        tests
)
