PROJECT(ZincPlugin)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" ""
      RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/${REMOTE_EXTERNAL_BINARIES_DIR}")

IF(WIN32)
#    IF(RELEASE_MODE)
#        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.dll sha1value)
#        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.lib sha1value)
#    ELSE()
#        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.dll sha1value)
#        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.lib sha1value)
#    ENDIF()
ELSEIF(APPLE)
   RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libzinc.3.dylib f2415956b1524e8369db69583a9881fe6f2acbdb)
ELSE()
   RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libzinc.so.3 2467b6ff9a50c74558de83b3b050d33edf9b4fb7)
ENDIF()

# Retrieve the Zinc external binary

SET(EXTERNAL_BINARIES_DIR ${PROJECT_SOURCE_DIR}/${LOCAL_EXTERNAL_BINARIES_DIR})

IF(WIN32)
#    SET(EXTERNAL_BINARIES
#        zinc${CMAKE_SHARED_LIBRARY_SUFFIX}
#    )
ELSEIF(APPLE)
   SET(EXTERNAL_BINARIES
       libzinc.3${CMAKE_SHARED_LIBRARY_SUFFIX}
   )
ELSE()
    SET(EXTERNAL_BINARIES
        libzinc${CMAKE_SHARED_LIBRARY_SUFFIX}.3
    )
ENDIF()

# Add the plugin

ADD_PLUGIN(Zinc
    SOURCES
        ../../plugininfo.cpp

        src/zincplugin.cpp
    HEADERS_MOC
        src/zincplugin.h
    INCLUDE_DIRS
        include
        src
    QT_MODULES
        Core
    EXTERNAL_BINARIES_DIR
        ${EXTERNAL_BINARIES_DIR}
    EXTERNAL_BINARIES
        ${EXTERNAL_BINARIES}
    TESTS
        tests
)
