PROJECT(ZincPlugin)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" ""
      RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/${REMOTE_EXTERNAL_BINARIES_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.3.1.1.dll 7a1e5df2b1d991dd36eea73caa6a987ce6d7c847)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.3.1.1.lib 6958ef3f0e3b458e193af8373d63f6324a9564e2)
#    ELSE()
#        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.3.1.1.dll sha1value)
#        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} zinc.3.1.1.lib sha1value)
    ENDIF()
ELSEIF(APPLE)
   RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libzinc.3.dylib 1791e262799fabcfaaaabf6d7d195d7075e682d3)
ELSE()
   RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libzinc.so.3 1c2d92a40337693f1fa44895502ed089e19453ef)
ENDIF()

# Retrieve the Zinc external binary

SET(EXTERNAL_BINARIES_DIR ${PROJECT_SOURCE_DIR}/${LOCAL_EXTERNAL_BINARIES_DIR})

IF(WIN32)
IF(RELEASE_MODE)
    SET(EXTERNAL_BINARIES
        zinc.3.1.1${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
ENDIF()
ELSEIF(APPLE)
   SET(EXTERNAL_BINARIES
       libzinc.3${CMAKE_SHARED_LIBRARY_SUFFIX}
   )
ELSE()
    SET(EXTERNAL_BINARIES
        libzinc${CMAKE_SHARED_LIBRARY_SUFFIX}.3
    )
ENDIF()

# Add the plugin

ADD_PLUGIN(Zinc
    SOURCES
        ../../plugininfo.cpp

        src/zincplugin.cpp
    HEADERS_MOC
        src/zincplugin.h
    INCLUDE_DIRS
        include
        src
    QT_MODULES
        Core
    EXTERNAL_BINARIES_DIR
        ${EXTERNAL_BINARIES_DIR}
    EXTERNAL_BINARIES
        ${EXTERNAL_BINARIES}
    TESTS
        tests
)
