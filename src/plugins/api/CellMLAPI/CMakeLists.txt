PROJECT(CellMLAPIPlugin)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" ""
       RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/${REMOTE_EXTERNAL_BINARIES_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.dll 05b5e1952dcc78405ea7c65ddff3e45cc604c4ee)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.lib 1a4a6376c888bcd12a367b29eb347cd3aa268db6)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.dll 1d71e0bf2451e58ac0dcc166d184b8a4a1293e10)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.lib 0eb18bc4136af00895d27864ed2e2d58b68896c0)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.dll 29c3765fd4af36b21031f6e267421cf1a7b18c1b)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.lib 84adfe97fa8a3b9bf6ecf00a7d5e60be2c2d28de)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.dll 3467c88fec5f49e3338d6662fbc0d11a520abc32)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.lib 3caa9779c7162e12f13205820f0639e6e9f3da9e)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.dll d9437ac97cb03f27bfcd5486ed36db58bb267ea8)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.lib a0f5df57e7b577252acfbe448649e05adf3ce63b)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.dll a2396ca9f477d58bfbeee24b69e3fc0ae7156bd6)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.lib dea8c2bd67e333265ef02559a99e3395473f0264)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.dll ef95ef66262cad413e469ec60ab31a4e4fd77fad)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.lib 026bea0af3c30feca59394f6d7fef0b361f56bf5)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.dll 556ed73c2194a4229b5e281488164ccfdc289720)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.lib 4b84c4e275ee3d19ce30ff62dc0d3274e325f17e)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.dll 35f83e47a49d7532d619b197321ada44c60f806f)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.lib 63588e62043ec2dfb55e8f7b64c46a6203cbb18c)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.dll 209b77b08614a8cd7eb9248b1cbf10657f06ea29)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} annotools.lib a4afdd51aaf2ff5b1866dc965f69f7f6e1c6b7b1)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.dll b9b6e5d28f52bf9fa40fcd89a04ea2e07a5e290d)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} ccgs.lib 0eb18bc4136af00895d27864ed2e2d58b68896c0)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.dll 13858d63c908bec6db5a63e689f220b1386e57e4)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celeds.lib 171d485a77594365414e514d06a69ba57ef63b6f)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.dll e871da8a3fc92b2f4420c4331f06b8b5fca7ce19)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} celedsexporter.lib 7dc1c1b4ab330ad62766ca771b4818121a3d7649)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.dll d1034e3641ee6250437843be5b5f0fbd1d3c2223)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cellml.lib c8a645d1ab7a834b2d131335d296584ad06016b9)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.dll 1ccbdf09f909c4cc0915853d5f3dcd7efb1d6f67)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cevas.lib a38f84f2d43b72fdc91398b4893e99c8fe02d165)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.dll 93f8ce3febba66cd548dd30fd46e3a4a014f08fa)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} cuses.lib 46cb427021218de92c043d3b510e4ad88676489b)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.dll d8ba38e455dc8e5ddcf6aee1442452c16ed448b6)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} malaes.lib 778c1c64cbb64eb47e263be1ee786153ddaa4ffc)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.dll 225cccc2363232c313029585673810a18c760ba2)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} vacss.lib eac7a10735f28fff9486d679363ca0c4be812f7c)
    ENDIF()
ELSEIF(APPLE)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libannotools.2.dylib d2e9cf7e882ef8866793ca44876a65e29eea06f6)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libccgs.3.dylib ffdd3f338e0d37ff5c9426bada2b299854913ab8)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceleds.1.dylib b468549430191566de0d15842ca56aaa537520b1)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceledsexporter.1.dylib bcee43c18036112994b24576a02cc5993737e394)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcellml.2.dylib 296c9eb3eb6551038221c57bc0e7677d3ceb58a2)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcevas.1.dylib 1c9013f385672d8ccf549d271f8db5fb9dcdfe93)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcuses.1.dylib 1e9715607001b6dea65f1624e191b0575bb3e9f0)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libmalaes.1.dylib a2d860cafcc308ac1ca858056b670d4dff572ef0)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libvacss.1.dylib e452ea91570296dc2642aef26c2c37c945d31f92)
ELSE()
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libannotools.so.2 2c57281a8d98baac8641b394f808f63f16e261da)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libccgs.so.3 41f0a7cd9b8ae6f0bf909379ae3e7f5af0563e41)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceleds.so.1 fca9dc6878e8fddf2484afddd1c9032af895de2b)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libceledsexporter.so.1 b8edf04c7338f5c48b1fa683926fe64c3977ddbb)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcellml.so.2 c23f96ae113eca9405bf90f105d1cdf16275a258)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcevas.so.1 c64f2510d011f5892d113f77fb2ad36de5ae16a3)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libcuses.so.1 8f263f2957c67762d409dc12093d12b04988395b)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libmalaes.so.1 e5c70b57e392185691145130fc61a19a4a1839b9)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libvacss.so.1 9e0561b27307bb43f009094152cd9cf14da476d1)
ENDIF()

# Retrieve the CellML API external binaries

SET(EXTERNAL_BINARIES_DIR ${PROJECT_SOURCE_DIR}/${LOCAL_EXTERNAL_BINARIES_DIR})

IF(WIN32)
    SET(EXTERNAL_BINARIES
        annotools${CMAKE_SHARED_LIBRARY_SUFFIX}
        ccgs${CMAKE_SHARED_LIBRARY_SUFFIX}
        celeds${CMAKE_SHARED_LIBRARY_SUFFIX}
        celedsexporter${CMAKE_SHARED_LIBRARY_SUFFIX}
        cellml${CMAKE_SHARED_LIBRARY_SUFFIX}
        cevas${CMAKE_SHARED_LIBRARY_SUFFIX}
        cuses${CMAKE_SHARED_LIBRARY_SUFFIX}
        malaes${CMAKE_SHARED_LIBRARY_SUFFIX}
        vacss${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
ELSEIF(APPLE)
    SET(EXTERNAL_BINARIES
        libannotools.2${CMAKE_SHARED_LIBRARY_SUFFIX}
        libccgs.3${CMAKE_SHARED_LIBRARY_SUFFIX}
        libceleds.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libceledsexporter.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libcellml.2${CMAKE_SHARED_LIBRARY_SUFFIX}
        libcevas.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libcuses.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libmalaes.1${CMAKE_SHARED_LIBRARY_SUFFIX}
        libvacss.1${CMAKE_SHARED_LIBRARY_SUFFIX}
    )
ELSE()
    SET(EXTERNAL_BINARIES
        libannotools${CMAKE_SHARED_LIBRARY_SUFFIX}.2
        libccgs${CMAKE_SHARED_LIBRARY_SUFFIX}.3
        libceleds${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libceledsexporter${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libcellml${CMAKE_SHARED_LIBRARY_SUFFIX}.2
        libcevas${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libcuses${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libmalaes${CMAKE_SHARED_LIBRARY_SUFFIX}.1
        libvacss${CMAKE_SHARED_LIBRARY_SUFFIX}.1
    )
ENDIF()

IF(APPLE)
    SET(EXTERNAL_BINARIES_DEPENDENCIES ${EXTERNAL_BINARIES})
ELSE()
    SET(EXTERNAL_BINARIES_DEPENDENCIES)
ENDIF()

# Ignore some warnings on Windows

IF(WIN32)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4091 /wd4290")
    # Note: on Windows, some warnings get generated, but we have nothing to do
    #       with them...
ENDIF()

# Add the plugin

ADD_PLUGIN(CellMLAPI
    SOURCES
        ../../plugininfo.cpp

        src/cellmlapiplugin.cpp
    HEADERS_MOC
        src/cellmlapiplugin.h
    INCLUDE_DIRS
        include
        src
    QT_MODULES
        Core
    EXTERNAL_BINARIES_DIR
        ${EXTERNAL_BINARIES_DIR}
    EXTERNAL_BINARIES
        ${EXTERNAL_BINARIES}
    EXTERNAL_BINARIES_DEPENDENCIES
        ${EXTERNAL_BINARIES_DEPENDENCIES}
    TESTS
        tests
)
