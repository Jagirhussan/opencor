PROJECT(LLVMPlugin)

INCLUDE(cmake/common.cmake)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" "" RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/bin/${DISTRIB_BINARY_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.dll 618e223a99dd238cc2bf42364810d0b01635c0e2)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.lib 6833297812b6c0b6b29330d85c3840b04114944c)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.dll 744e673ec06efaa4854dd4ad3b3aa8a42128af09)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.lib cec708650af4756292aea5ff4768133c8658d239)
    ENDIF()
ELSEIF(APPLE)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.dylib 75361f70b6101c72c7228aabdb9efb12776a00d1)
ELSE()
    IF(${ARCHITECTURE} EQUAL 32)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.so ce3127275779774b219be6afa68d459f38a7fce4)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.so 8c36cfe54e68396d20c3b95efff905c10805c623)
    ENDIF()
ENDIF()

# Add the plugin as a binary
# Note: in the case of Windows, LLVM_BINARY_PLUGIN must refer to the
#       distribution directory as opposed to the main build directory since we
#       need the .lib file and it's only there, so...

IF(WIN32)
    SET(LLVM_BINARY_PLUGIN
        ${PROJECT_SOURCE_DIR}/bin/${DISTRIB_BINARY_DIR}/${CMAKE_IMPORT_LIBRARY_PREFIX}LLVM${CMAKE_IMPORT_LIBRARY_SUFFIX}

        PARENT_SCOPE
    )
ELSE()
    SET(LLVM_BINARY_PLUGIN
        ${PROJECT_BUILD_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}LLVM${CMAKE_SHARED_LIBRARY_SUFFIX}

        PARENT_SCOPE
    )
ENDIF()

ADD_PLUGIN_BINARY(LLVM
    INCLUDE_DIRS
        include
        src
        tools/clang/include
    QT_LIBRARIES
        QtCore
)
