PROJECT(LLVMPlugin)

INCLUDE(cmake/common.cmake)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" "" RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/bin/${DISTRIB_BINARY_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.dll 0ac45a7a40285c01e69be60afe5bab94e8fc1f87)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.lib 81831bc4d91a021f2305da9fe96469e58abda304)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.dll 3611e262e7ba9579ef385a4203039c90856dc83b)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.lib feab1d630e68c711c8ee9e7f3cdde2386f243545)
    ENDIF()
ELSEIF(APPLE)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.dylib 81925ff38ed0042d40baa43cf96ee20647e3900e)
ELSE()
    IF(${ARCHITECTURE} EQUAL 32)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.so 2bf22baf227f4b6eb6a94962cf7522e4746ef291)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.so e7d4dfa6a2ed2e9a3f2655dccb1e8f516a309613)
    ENDIF()
ENDIF()

# Add the plugin as a binary
# Note: in the case of Windows, LLVM_BINARY_PLUGIN must refer to the
#       distribution directory as opposed to the main build directory since we
#       need the .lib file and it's only there, so...

IF(WIN32)
    SET(LLVM_BINARY_PLUGIN
        ${PROJECT_SOURCE_DIR}/bin/${DISTRIB_BINARY_DIR}/${CMAKE_IMPORT_LIBRARY_PREFIX}LLVM${CMAKE_IMPORT_LIBRARY_SUFFIX}

        PARENT_SCOPE
    )
ELSE()
    SET(LLVM_BINARY_PLUGIN
        ${PROJECT_BUILD_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}LLVM${CMAKE_SHARED_LIBRARY_SUFFIX}

        PARENT_SCOPE
    )
ENDIF()

ADD_PLUGIN_BINARY(LLVM
    INCLUDE_DIRS
        include
        src
        tools/clang/include
    QT_LIBRARIES
        QtCore
)
