PROJECT(LLVMPlugin)

INCLUDE(cmake/common.cmake)

# Retrieve the plugin's binary file(s)

STRING(REPLACE "${${CMAKE_PROJECT_NAME}_SOURCE_DIR}/" "" RELATIVE_PROJECT_SOURCE_DIR "${PROJECT_SOURCE_DIR}/bin/${DISTRIB_BINARY_DIR}")

IF(WIN32)
    IF(RELEASE_MODE)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.dll d9867e7b2d49bc71a1a6e0f605a52bb8dd1025aa)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.lib a509234efffd72d7a074b889aa60ed416ef92d69)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.dll 89aff1b1c0e679baab3f7d9476d22cc79e0db39d)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} LLVM.lib 51ab3e2428decc120a6c529b2b818e9027b5243d)
    ENDIF()
ELSEIF(APPLE)
    RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.dylib ee665ab3e45ead07128c9f7c26c1875a0f73453b)
ELSE()
    IF(${ARCHITECTURE} EQUAL 32)
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.so 1eabc98a0ae53345649a01d0ac62fcdc98128b6d)
    ELSE()
        RETRIEVE_BINARY_FILE(${RELATIVE_PROJECT_SOURCE_DIR} libLLVM.so 5d0d1bba5df90e1a6d416865ab9ab22ff60311ab)
    ENDIF()
ENDIF()

# Add the plugin as a binary
# Note: in the case of Windows, LLVM_BINARY_PLUGIN must refer to the
#       distribution directory as opposed to the main build directory since we
#       need the .lib file and it's only there, so...

IF(WIN32)
    SET(LLVM_BINARY_PLUGIN
        ${PROJECT_SOURCE_DIR}/bin/${DISTRIB_BINARY_DIR}/${CMAKE_IMPORT_LIBRARY_PREFIX}LLVM${CMAKE_IMPORT_LIBRARY_SUFFIX}

        PARENT_SCOPE
    )
ELSE()
    SET(LLVM_BINARY_PLUGIN
        ${PROJECT_BUILD_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}LLVM${CMAKE_SHARED_LIBRARY_SUFFIX}

        PARENT_SCOPE
    )
ENDIF()

ADD_PLUGIN_BINARY(LLVM
    INCLUDE_DIRS
        include
        src
        tools/clang/include
    QT_LIBRARIES
        QtCore
)
