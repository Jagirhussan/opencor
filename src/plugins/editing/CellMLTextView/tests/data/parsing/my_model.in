def model{my_model_cmeta_id} my_model as
    // A comment can fit on one line...

    // A comment can also fit
    // on one, two or even
    // more lines...

    def import{my_import1_cmeta_id} using "imported_model.cellml" for
    enddef;

    // In between comment...

    def import{my_import2_cmeta_id} using "imported_model.cellml" for
        unit{my_imported_unit1_cmeta_id} my_imported_unit1 using unit my_reference_unit1;

        comp{my_imported_component1_cmeta_id} my_imported_component1 using comp my_reference_component1;
        comp{my_imported_component2_cmeta_id} my_imported_component2 using comp my_reference_component2;

        unit{my_imported_unit2_cmeta_id} my_imported_unit2 using unit my_reference_unit2;
    enddef;

    // In between comment...

    def unit{my_base_unit_cmeta_id} my_base_unit as base unit;

    // In between comment...

    def unit{my_unit1_cmeta_id} my_unit1 as
    enddef;

    // In between comment...

    def unit{my_unit2_cmeta_id} my_unit2 as
        unit{second_cmeta_id} second;
        unit some_unit {pref: milli};
        unit some_unit {pref: 3};
        unit some_unit {pref: +3};
        unit some_unit {pref: -3};
        unit some_unit {expo: 3};
        unit some_unit {mult: 3};
        unit some_unit {off: 3};
        unit some_unit {pref: milli, expo: 3, mult: +5, off: -7};
    enddef;

    // In between comment...

    def map{my_connection_cmeta_id} between{my_map_components_cmeta_id} my_component1 and my_component2 for
        vars{my_map_variables1_cmeta_id} my_variable11 and my_variable21;
        vars{my_map_variables2_cmeta_id} my_variable12 and my_variable22;
        vars{my_map_variables3_cmeta_id} my_variable13 and my_variable23;
    enddef;
enddef;
