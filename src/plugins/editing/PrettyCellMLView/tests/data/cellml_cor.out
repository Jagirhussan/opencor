def model cellml_1_0 as
    def unit baseunit1 as base unit;
    def unit baseunit2 as base unit;
    def unit baseunit3 as base unit;

    def unit unit1 as
        unit ampere;
        unit becquerel;
        unit candela;
        unit celsius;
        unit coulomb;
        unit dimensionless;
        unit farad;
        unit gram;
        unit gray;
        unit henry;
        unit hertz;
        unit joule;
        unit katal;
        unit kelvin;
        unit kilogram;
        unit liter;
        unit litre;
        unit lumen;
        unit lux;
        unit meter;
        unit metre;
        unit mole;
        unit newton;
        unit ohm;
        unit pascal;
        unit radian;
        unit second;
        unit siemens;
        unit sievert;
        unit steradian;
        unit tesla;
        unit volt;
        unit watt;
        unit weber;
    enddef;

    def unit unit2 as
        unit someunit {pref: milli, expo: -1, mult: 3, off: 7};
    enddef;

    def unit unit3 as
        unit someunit {pref: yotta};
        unit someunit {pref: zetta};
        unit someunit {pref: exa};
        unit someunit {pref: peta};
        unit someunit {pref: tera};
        unit someunit {pref: giga};
        unit someunit {pref: mega};
        unit someunit {pref: kilo};
        unit someunit {pref: hecto};
        unit someunit {pref: deka};
        unit someunit {pref: deci};
        unit someunit {pref: centi};
        unit someunit {pref: milli};
        unit someunit {pref: micro};
        unit someunit {pref: nano};
        unit someunit {pref: milli};
        unit someunit {pref: pico};
        unit someunit {pref: femto};
        unit someunit {pref: atto};
        unit someunit {pref: zepto};
        unit someunit {pref: yocto};
    enddef;

    def comp component1 as
        def unit baseunit1 as base unit;
        def unit baseunit2 as base unit;
        def unit baseunit3 as base unit;

        def unit unit1 as
            unit ampere;
            unit becquerel;
            unit candela;
            unit celsius;
            unit coulomb;
            unit dimensionless;
            unit farad;
            unit gram;
            unit gray;
            unit henry;
            unit hertz;
            unit joule;
            unit katal;
            unit kelvin;
            unit kilogram;
            unit liter;
            unit litre;
            unit lumen;
            unit lux;
            unit meter;
            unit metre;
            unit mole;
            unit newton;
            unit ohm;
            unit pascal;
            unit radian;
            unit second;
            unit siemens;
            unit sievert;
            unit steradian;
            unit tesla;
            unit volt;
            unit watt;
            unit weber;
        enddef;

        def unit unit2 as
            unit someunit {pref: milli, expo: -1, mult: 3, off: 7};
        enddef;

        def unit unit3 as
            unit someunit {pref: yotta};
            unit someunit {pref: zetta};
            unit someunit {pref: exa};
            unit someunit {pref: peta};
            unit someunit {pref: tera};
            unit someunit {pref: giga};
            unit someunit {pref: mega};
            unit someunit {pref: kilo};
            unit someunit {pref: hecto};
            unit someunit {pref: deka};
            unit someunit {pref: deci};
            unit someunit {pref: centi};
            unit someunit {pref: milli};
            unit someunit {pref: micro};
            unit someunit {pref: nano};
            unit someunit {pref: milli};
            unit someunit {pref: pico};
            unit someunit {pref: femto};
            unit someunit {pref: atto};
            unit someunit {pref: zepto};
            unit someunit {pref: yocto};
        enddef;

        var variable1: unit1;
        var variable2: unit2 {init: 123};
        var variable3: unit3 {pub: in};
        var variable4: unit4 {priv: out};
        var variable5: unit5 {pub: none, priv: none};

        a = b;
        c = 3{dimensionless};
        d = 5{};
        e = 12.3e5{dimensionless};
        a = b == c;
        a = b <> c;
        a = b > c;
        a = b < c;
        a = b >= c;
        a = b <= c;
        a = b;
        a = b+c;
        a = b+c+d+e+f;
        a = -b;
        a = b-c;
        a = b-c-d-e-f;
        a = b*c;
        a = b*c*d*e*f;
        a = b/c;
        a = b/c/d/e/f;
        a = pow(b, c);
        a = sqrt(b);
        a = sqr(b);
        a = pow(b, 3{dimensionless});
        a = sqrt(b);
        a = sqrt(b);
        a = root(b, 3{dimensionless});
        a = root(b, c);
        a = abs(b);
        a = exp(b);
        a = ln(b);
        a = log(b);
        a = log(b, c);
        a = ceil(b);
        a = floor(b);
        a = fact(b);
        a = b and c;
        a = b and c and d and e and f;
        a = b or c;
        a = b or c or d or e or f;
        a = b xor c;
        a = b xor c xor d xor e xor f;
        a = not(b);
        a = not(b or c);
        a = ode(f, t);
        a = ode(f, t, 2{dimensionless});
    enddef;

    def group as containment for
        comp component1 incl
            comp component11 incl
                comp component111;
                comp component112;
            endcomp;
        endcomp;
    enddef;

    def group as containment containment1 for
        comp component1 incl
            comp component12 incl
                comp component121;
            endcomp;

            comp component13;
        endcomp;
    enddef;

    def group as encapsulation for
        comp component11 incl
            comp component111;
            comp component112;
        endcomp;

        comp component12 incl
            comp component121;
        endcomp;
    enddef;

    def group as encapsulation and containment containment1 for
        comp component1;
    enddef;

    def map between component1 and component2 for
        vars variable1 and variable2;
    enddef;
enddef;
