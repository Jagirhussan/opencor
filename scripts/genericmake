#!/bin/sh

appDir=$(cd $(dirname $0); pwd)/..

if [ -d $appDir/build ]; then
    if [ "$1" = "Release" ]; then
        cmakeBuildType=Release
        enableSamplePlugins=OFF
        enableTestPlugins=OFF
        enableTests=OFF
    elif [ "$1" = "Debug" ]; then
        cmakeBuildType=Debug
        enableSamplePlugins=OFF
        enableTestPlugins=OFF
        enableTests=ON
    elif [ "$1" = "CIRelease" ]; then
        cmakeBuildType=Release
        enableSamplePlugins=ON
        enableTestPlugins=ON
        enableTests=ON
    elif [ "$1" = "CIDebug" ]; then
        cmakeBuildType=Debug
        enableSamplePlugins=ON
        enableTestPlugins=ON
        enableTests=ON
    fi

    if [ "`hash ninja 2>&1`" = "" ]; then
        ninjaFound=true
        generator="Ninja"
        cmakeGenerator="Ninja"
    else
        ninjaFound=false
        generator="Make"
        cmakeGenerator="Unix Makefiles"
    fi

    if [ "$1" = "Debug" ]; then
        extraTitleInfo=" for testing"
    elif [ "$1" = "CIRelease" ]; then
        extraTitleInfo=" for CI release"
    elif [ "$1" = "CIDebug" ]; then
        extraTitleInfo=" for CI debug"
    fi

    echo "\033[44;37;1mMaking OpenCOR$extraTitleInfo (using $generator)...\033[0m"

    origDir=`pwd`

    cd $appDir/build

    cmake -G "$cmakeGenerator" -DCMAKE_BUILD_TYPE=$cmakeBuildType -DENABLE_SAMPLE_PLUGINS=$enableSamplePlugins -DENABLE_TEST_PLUGINS=$enableTestPlugins -DENABLE_TESTS=$enableTests ..

    exitCode=$?

    if [ $exitCode -ne 0 ]; then
        cd $origDir

        exit $exitCode
    fi

    shift

    if [ $ninjaFound = true ]; then
        ninja $@
    else
        make $@
    fi

    exitCode=$?

    cd $origDir

    if [ $exitCode -eq 0 ]; then
        echo "\033[42;37;1mAll done!\033[0m"
    fi

    exit $exitCode
else
    echo "OpenCOR's build directory is missing."

    exit 1
fi
